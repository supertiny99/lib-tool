/************************************************************************/
//原始写法
function m1() {
  //...
}

m1();

//缺点。污染全局变量

/************************************************************************/
//对象写法
var module1 = new Object({
  _count: 0,
  m1: function() {
    //...
  },
  m2: function() {
    //...
  }
});

modul1.m1();

// 缺点。暴露所有模块成员
moudule._count = 5;

/************************************************************************/
//立即执行函数写法(Immediately-Invoked Function Expression, IIFE)
var module1 = (function() {
  var _count = 0;
  var m1 = function() {
    //...
  };
  var m2 = function() {
    //...
  };
  return {
    m1: m1;
    m2: m2;
  };

})();

/************************************************************************/
//放大模式(augmentation)
var module1 = (function(mod) {
  mod.m3 = function() {
    //...
  };
  return mod;
})(module1);
//为模块添加新方法

/************************************************************************/
//宽放大模式(Loose augmentation)
var module1 = (function(mod) {
  mod.m4 = function() {
    //...
  };
  return mod;
})(window.module1 || {});
// 参数可以是空对象

/************************************************************************/
// 输入全局变量，保证模块的独立性，使模块之间的关系变得明显，
var module1 = (function($, YAHOO) {
  //...
})(jQuery, YAHOO);

/************************************************************************/
